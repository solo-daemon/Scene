# Generated by Django 5.1.7 on 2025-03-31 22:43

import backend.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SceneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scene_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('abbreviation', models.TextField(default='none')),
            ],
            options={
                'ordering': ['college_name'],
                'indexes': [models.Index(fields=['college_name'], name='backend_col_college_4ef966_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('year', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('gmail', models.EmailField(max_length=255, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('google_id', models.CharField(max_length=255, unique=True)),
                ('name', models.TextField()),
                ('profile_pic', models.TextField()),
                ('gmail_pic', models.TextField()),
                ('about', models.TextField()),
                ('instagram_id', models.TextField(blank=True, null=True)),
                ('linkedin_id', models.TextField(blank=True, null=True)),
                ('google_access_token', models.TextField(blank=True, null=True)),
                ('google_refresh_token', models.TextField(blank=True, null=True)),
                ('google_token_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('college', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.college')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Follwers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity_name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'ordering': ['identity_name'],
                'indexes': [models.Index(fields=['identity_name'], name='backend_ide_identit_f258ab_idx')],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='identity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.identity'),
        ),
        migrations.CreateModel(
            name='Queries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('priority', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('location_text', models.CharField(default='', max_length=255)),
                ('start_time', models.BigIntegerField(default=backend.models.get_current_unix_timestamp)),
                ('end_time', models.BigIntegerField(default=backend.models.get_current_unix_timestamp)),
                ('capacity', models.IntegerField(default=100)),
                ('occupancy', models.IntegerField(default=0)),
                ('about', models.TextField(blank=True, null=True)),
                ('scene_image', models.TextField(default='https://github.com/shadcn.png')),
                ('visibility', models.IntegerField(choices=[(0, 'PUBLIC'), (1, 'PRIVATE'), (2, 'PROTECTED')], default=0)),
                ('user_organizer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='organized_scenes', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.scenetype')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'ADDITION'), (1, 'REMOVAL'), (2, 'CANCELLED'), (2, 'REMINDER'), (3, 'UPDATE'), (4, 'REQUESTED_INVITATION'), (5, 'ACCEPTED_INVITATION')], default=0)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.scene')),
            ],
        ),
        migrations.CreateModel(
            name='ItineraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spot_name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('notes', models.JSONField(default=list)),
                ('time', models.BigIntegerField(default=backend.models.get_current_unix_timestamp)),
                ('scene', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='backend.scene')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkfilter', models.IntegerField(choices=[(1, 'CLOTHING'), (2, 'PERSONAL'), (3, 'GIRLLY'), (4, 'DOCUMENT'), (5, 'MISCELLANEOUS'), (6, 'TRAVEL-ESSENTIALS')], null=True)),
                ('item', models.TextField()),
                ('scene', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='backend.scene')),
            ],
        ),
        migrations.CreateModel(
            name='TravelType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_type', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(default='none')),
            ],
            options={
                'ordering': ['travel_type'],
                'indexes': [models.Index(fields=['travel_type'], name='backend_tra_travel__56e93a_idx')],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='travel_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.traveltype'),
        ),
        migrations.CreateModel(
            name='VisitorList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'ORGANIZER'), (1, 'ACCEPTED'), (2, 'INVITED'), (3, 'REQUESTED'), (4, 'CANCELLED')], default=2)),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.scene')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='scene',
            name='visitors',
            field=models.ManyToManyField(related_name='visited_scenes', through='backend.VisitorList', to=settings.AUTH_USER_MODEL),
        ),
    ]
